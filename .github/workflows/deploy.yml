name: production
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps TCP port 5432 on service container to the host
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/notes
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install --only=production --ignore-scripts
      # run the migration in the test database
      - run: npx prisma migrate dev --preview-feature
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only deploy main
    needs: test
    steps:
      - uses: actions/checkout@v2
      - run: yarn install --only=production --ignore-scripts
      - name: Run production migration
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgres://hyevooqphffcok:ae6ccf12539e919e899db4c7b431491410d6e427a3ab25337ebccf5a0b846b39@ec2-18-215-8-186.compute-1.amazonaws.com:5432/d45lsq3o0spe0g
      - uses: akhileshns/heroku-deploy@v3.4.6
        with:
          heroku_api_key: 3c5c6acb-67d8-4a32-90fa-10c330b00e2c
          heroku_app_name: unots-app
          heroku_email: didiermunezer38@gmail.com